version: 2.1

jobs:
  lint-and-test:
    docker:
      - image: cimg/python:3.10.1
    parallelism: 3
    steps:
      - checkout
      - restore_cache:
          key: &deps1-cache deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          key: *deps1-cache
          paths:
            - "venv"
      - run:
          name: lint
          command: ./venv/bin/python3 -m pylint app/
      - run:
          name: Run tests
          command: |
            set -e
            cd app
            TEST_FILES=$(circleci tests glob "tests/*.py" | circleci tests split --split-by=filesize)
            mkdir -p test-results
            echo "TEST_TOKEN" >> .mapbox_token
            ../venv/bin/python3 -m pytest --verbose --junitxml=test-results/junit.xml $TEST_FILES
      - store_test_results:
          path: app/test-results
      - store_artifacts:
          path: app/test-results
  deploy-prod:
    machine: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "ec:d4:6f:89:b6:5d:2b:92:af:74:44:21:19:1a:9a:cd"
      - run:
           name: Test deploy
           command: |
               ls ~/.ssh
               cat ~/.ssh/config
               ssh $SSH_USER@$SSH_HOST 'cd /home/sammy/test_circleci && ./deploy.sh prod'
  deploy-dev:
    machine: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "ec:d4:6f:89:b6:5d:2b:92:af:74:44:21:19:1a:9a:cd"
      - run:
           name: Test deploy 
           command: |
               ls ~/.ssh
               cat ~/.ssh/config
               ssh $SSH_USER@$SSH_HOST 'cd /home/sammy/dev_circleci && ./deploy.sh dev'
workflows:
  python-workflow:
    jobs:
      - lint-and-test
      - deploy-dev:
          requires:
            - lint-and-test
          filters:
            branches:
              only: develop
      - deploy-prod:
              requires:
                - lint-and-test
              filters:
                branches:
                  only: main